// build-country-id-map.mjs
// Usage: node build-country-id-map.mjs
// Scrapes TravelHealthPro country index directly — reliable and instant.

import fs from "node:fs";
import path from "node:path";
import { fileURLToPath } from "node:url";
import fetch from "node-fetch";
import * as cheerio from "cheerio";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const risksJsonPath = path.resolve(__dirname, "./cdc_travel_risks_clean.json");
const outputPath = path.resolve(__dirname, "./src/countryIdMap.js");

if (!fs.existsSync(risksJsonPath)) {
  console.error(`❌ Could not find: ${risksJsonPath}`);
  process.exit(1);
}

const risks = JSON.parse(fs.readFileSync(risksJsonPath, "utf8"));
const countryNames = Object.keys(risks).sort();

async function fetchOfficialList() {
  console.log("🌍 Fetching master country list from TravelHealthPro...");
  const res = await fetch("https://travelhealthpro.org.uk/countries", {
    headers: { "User-Agent": "Mozilla/5.0" },
  });
  if (!res.ok) throw new Error(`HTTP ${res.status}`);
  const html = await res.text();
  const $ = cheerio.load(html);

  const map = {};
  $("a[href*='/country/']").each((_, el) => {
    const href = $(el).attr("href");
    const name = $(el).text().trim();
    const match = /\/country\/(\d+)/.exec(href);
    if (name && match) map[name.toLowerCase()] = Number(match[1]);
  });
  console.log(`✔ Found ${Object.keys(map).length} official entries`);
  return map;
}

async function main() {
  const officialMap = await fetchOfficialList();
  const result = {};
  const missing = [];

  for (const name of countryNames) {
    const id =
      officialMap[name.toLowerCase()] ||
      officialMap[name.replace(/\(.*?\)/g, "").trim().toLowerCase()] ||
      null;

    if (id) result[name] = id;
    else missing.push(name);
  }

  const banner = `// AUTO-GENERATED by build-country-id-map.mjs
// Do not edit manually.
export const COUNTRY_ID_MAP = ${JSON.stringify(result, null, 2)};
export default COUNTRY_ID_MAP;
`;

  fs.writeFileSync(outputPath, banner, "utf8");

  console.log(`\n✅ Wrote ${Object.keys(result).length} countries → ${outputPath}`);
  if (missing.length)
    console.warn(`⚠ Missing ${missing.length} countries:\n`, missing);
}

main().catch((err) => {
  console.error("❌ Fatal error:", err);
  process.exit(1);
});
